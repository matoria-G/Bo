package com.bo.jobs;

import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.KeySpec;
import java.sql.*;

import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;
import javax.sql.DataSource;

public class Test {
public void fun(Object  ...a){
	System.out.println(a[0]);
		
	}
public static void main(String[] args) throws SQLException {
	String userDefinedPassword = "hello123";
    String hashedPassToStoreInDB = new String(hashPassword(userDefinedPassword));
    System.out.println("what stores in DB: " + hashedPassToStoreInDB);
    // store in database

    //Password Verify
    String inputPassword = "hello123";
    String hashedInputPassword = new String(hashPassword(inputPassword));
    System.out.println("Users hashed password: " + hashedInputPassword);

    if (hashedPassToStoreInDB.equals(hashedInputPassword)) {
        System.out.println("Correct");
    } else {
        System.out.println("Incorrect");
    }
	
       
}
	private static byte[] hashPassword(String password) {
	    byte[] salt = new byte[16];
	    byte[] hash = null;
	    for (int i = 0; i < 16; i++) {
	        salt[i] = (byte) i;
	    }
	    try {
	        KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 65536, 128);
	        SecretKeyFactory f = SecretKeyFactory.getInstance("PBEWithHmacSHA256AndAES_128");
	        hash = f.generateSecret(spec).getEncoded();
	
	    } catch (NoSuchAlgorithmException nsale) {
	        nsale.printStackTrace();
	
	    } catch (InvalidKeySpecException ikse) {
	        ikse.printStackTrace();
	    }
	    return hash;
	}

}
